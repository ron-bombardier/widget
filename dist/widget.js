(()=>{"use strict";function t(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class e{constructor(){t(this,"environmentLocal",void 0),t(this,"environmentStaging",void 0),t(this,"environmentProduction",void 0),t(this,"apiUrl",void 0),t(this,"apiUrlLocal",void 0),t(this,"apiUrlStaging",void 0),t(this,"apiUrlProduction",void 0),t(this,"eventsUrl",void 0),t(this,"eventsUrlLocal",void 0),t(this,"eventsUrlStaging",void 0),t(this,"eventsUrlProduction",void 0),t(this,"customEnvironmentAttribute",void 0),t(this,"environment",void 0),t(this,"environments",void 0),t(this,"maxSessionDays",void 0),t(this,"challengeParameterName",void 0),t(this,"sessionParameterName",void 0),t(this,"version",void 0),t(this,"widgetDivClass",void 0),t(this,"widgetIdAttribute",void 0),t(this,"hostUrlLocal",void 0),t(this,"hostUrlStaging",void 0),t(this,"hostUrlProduction",void 0),t(this,"hostUrl",void 0),t(this,"isEnvironmentValid",(t=>this.environments.includes(t))),t(this,"setEnvironment",(t=>{t&&this.isEnvironmentValid(t)&&(this.environment=t,t===this.environmentStaging?(this.apiUrl=this.apiUrlStaging,this.eventsUrl=this.eventsUrlStaging,this.hostUrl=this.hostUrlStaging):t===this.environmentLocal?(this.apiUrl=this.apiUrlLocal,this.eventsUrl=this.eventsUrlLocal,this.hostUrl=this.hostUrlLocal):t===this.environmentProduction&&(this.apiUrl=this.apiUrlProduction,this.eventsUrl=this.eventsUrlProduction,this.hostUrl=this.hostUrlProduction))})),this.environmentLocal="local",this.environmentStaging="staging",this.environmentProduction="production",this.apiUrl="https://api.tonicpow.com",this.apiUrlLocal="http://localhost:3000",this.apiUrlStaging="https://api.staging.tonicpow.com",this.apiUrlProduction="https://api.tonicpow.com",this.eventsUrl="https://events.tonicpow.com",this.eventsUrlLocal="http://localhost:3002",this.eventsUrlStaging="https://events.staging.tonicpow.com",this.eventsUrlProduction="https://events.tonicpow.com",this.hostUrl="http://tonicpow.com",this.hostUrlLocal="http://localhost",this.hostUrlStaging="https://web.staging.tonicpow.com",this.hostUrlProduction="https://tonicpow.com",this.customEnvironmentAttribute="data-environment",this.environment="",this.environments=[this.environmentLocal,this.environmentStaging,this.environmentProduction],this.maxSessionDays=60,this.sessionParameterName="tncpw_session",this.challengeParameterName="tncpw_challenge",this.version="v0.0.10",this.widgetDivClass="tonicpow-widget",this.widgetIdAttribute="data-widget-id"}}function i(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class n{constructor(t="",e="",n){i(this,"sessionId",void 0),i(this,"start",void 0),i(this,"interactionSent",void 0),i(this,"config",void 0),i(this,"challengeGuid",void 0),i(this,"sendPing",(()=>{setTimeout((()=>{this.sendEvent("ping",((new Date).getTime()-this.start).toString())}),4e3)})),i(this,"detectWidgetClick",(()=>{document.addEventListener("click",(async t=>{const e=(t||window.event).target?.parentElement?.parentElement;if(e?.classList?.contains("tonicpow-widget"))try{await this.sendEvent("widget_click",e.getAttribute(this.config.widgetIdAttribute)||"")}catch(t){console.error("failed to report interaction: widget_click",t)}}))})),i(this,"detectBounce",(()=>{window.onbeforeunload=()=>{this.sendEvent("bounce",((new Date).getTime()-this.start).toString())}})),i(this,"sendChallengeResponse",(()=>{try{this.sendEvent("challenge",this.challengeGuid)}catch(t){console.error("Failed to send challenge response",t)}})),i(this,"detectInteraction",(()=>{document.addEventListener("mousedown",(async()=>{if(!this.interactionSent)try{this.interactionSent=!0,await this.sendEvent("interaction","mousedown")}catch(t){console.error("failed to report interaction: mousedown",t)}})),document.addEventListener("scroll",(async()=>{if(!this.interactionSent)try{this.interactionSent=!0,await this.sendEvent("interaction","scroll")}catch(t){console.error("failed to report interaction: scroll",t)}})),document.addEventListener("keypress",(async()=>{if(!this.interactionSent)try{this.interactionSent=!0,await this.sendEvent("interaction","keypress")}catch(t){console.error("failed to report interaction: keypress",t)}}))})),i(this,"sendEvent",(async(t,e)=>{if(!this.sessionId&&!this.challengeGuid)return void console.info("you must call init with a session before sending events");const i=window.location.href,n={v:this.config.version,name:t,location:i,data:e};this.sessionId&&(n.tncpw_session=this.sessionId),await fetch(`${this.config.eventsUrl}/v1/events?d=${btoa(JSON.stringify(n))}`,{method:"get"})})),this.sessionId=t,this.config=n,this.challengeGuid=e,this.interactionSent=!1,this.start=(new Date).getTime(),this.challengeGuid&&this.challengeGuid.length>0?this.sendChallengeResponse():(this.detectInteraction(),this.detectBounce(),this.detectWidgetClick(),this.sendPing())}}function o(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class s{constructor(){o(this,"removeStorage",(t=>{try{localStorage.removeItem(t),localStorage.removeItem(`${t}_expiresIn`)}catch(e){return console.log(`removeStorage: Error removing key [${t}] from localStorage: ${JSON.stringify(e)}`),!1}return!0})),o(this,"getStorage",(t=>{const e=Date.now();let i;try{i=localStorage.getItem(`${t}_expires`)}catch(t){return console.log(`getItem: error getting localStorage: ${JSON.stringify(t)}`),null}if(null==i&&(i=0),i<e)return this.removeStorage(t),null;try{return localStorage.getItem(t)}catch(e){return console.log(`getStorage: Error reading key [${t}] from localStorage: ${JSON.stringify(e)}`),null}})),o(this,"setStorage",((t,e,i=null)=>{i=i?Math.abs(i):86400;const n=Date.now()+1e3*i;try{localStorage.setItem(t,e),localStorage.setItem(`${t}_expires`,n.toString())}catch(e){return console.log(`setStorage: Error setting key [${t}] in localStorage: ${JSON.stringify(e)}`),!1}return!0}))}}function r(t,e,i){return e in t?Object.defineProperty(t,e,{value:i,enumerable:!0,configurable:!0,writable:!0}):t[e]=i,t}class a{constructor(t){r(this,"config",void 0),r(this,"storage",void 0),r(this,"events",void 0),r(this,"widgets",void 0),r(this,"options",void 0),r(this,"buttonViewsInitialized",void 0),r(this,"shareButtons",void 0),r(this,"nrOfButtons",void 0),r(this,"setOreo",((t,e,i)=>{const n=new Date;n.setTime(n.getTime()+864e5*i),document.cookie=`${t}=${e};path=/;expires=${n.toUTCString()}`})),r(this,"captureVisitorSession",((t="",e="")=>{let i=t,n=e;const o=new URLSearchParams(window.location.search);return t&&t.length||"undefined"==typeof window||(i=o.get(this.config.sessionParameterName)||null),e&&e.length||"undefined"==typeof window||(n=o.get(this.config.challengeParameterName)||null),i&&i.length>0&&(this.setOreo(this.config.sessionParameterName,i,this.config.maxSessionDays),this.storage.setStorage(this.config.sessionParameterName,i,86400*this.config.maxSessionDays)),n&&n.length>0&&this.storage.setStorage(this.config.challengeParameterName,n,60),{sessionId:i,challengeGuid:n}})),r(this,"getVisitorSession",(()=>this.storage.getStorage(this.config.sessionParameterName))),r(this,"loadDivs",(async()=>{const t=document.getElementsByClassName(this.config.widgetDivClass);for(let e=t.length-1;e>=0;e--){const i=t[e];if(!i){console.log("exit early - remove this?");continue}const n=i.getAttribute(this.config.customEnvironmentAttribute);switch(this.config.setEnvironment(n||"production"),i.getAttribute("data-widget-type")){case"share-button":this.initializeButton(i);break;case"banner":default:await this.initializeBanner(i)}}})),r(this,"getDataAttributes",(function(t){const e={};return[].forEach.call(t.attributes,(function(t){if(/^data-/.test(t.name)){const i=t.name.substr(5).replace(/-(.)/g,(function(t,e){return e.toUpperCase()}));e[i]=t.value}})),e})),r(this,"shareButton",((t,e)=>{this.shareButtons.set(t,e)})),r(this,"closePopup",(()=>{const t=document.getElementById("tonicpow-widget-popup");t&&t.remove()})),r(this,"load",(async()=>{if("undefined"==typeof window)return void console.error("TonicPow embed only works in the browser");const t=document.getElementsByClassName(this.config.widgetDivClass);if(t&&t.length>0)try{await this.loadDivs(),console.log("%c TonicPow widget(s) loaded! ","background: #974CD2; color: #fff")}catch(t){throw t}const{sessionId:e,challengeGuid:i}=this.captureVisitorSession();(e||i)&&(this.events=new n(e||"",i||"",this.config))})),this.config=new e,this.storage=new s,this.widgets=new Map,this.options=t,this.buttonViewsInitialized=!1,this.shareButtons=new Map,this.nrOfButtons=0,"complete"===document.readyState||"interactive"===document.readyState?this.load():document.addEventListener("DOMContentLoaded",(()=>{this.load()}))}initializeButton(t){const e=this.getDataAttributes(t);e.buttonId||(t.id="tonicpow-button-id-"+this.nrOfButtons++,e.buttonId=t.id);const i=this.shareButtons.get(e.buttonId)||{};for(const t in e)!e.hasOwnProperty(t)||i&&i.hasOwnProperty(t)||(i[t]=e[t]);let n="";for(const t in i)i.hasOwnProperty(t)&&"string"==typeof i[t]&&(n+=`&${t}=${i[t]}`);i.width||(i.width="150"),i.height||(i.height="50"),i.targetUrl||(i.targetUrl=encodeURIComponent(document.location.href)),this.shareButtons.set(e.buttonId,i),t.innerHTML=`\n      <iframe\n        src='${this.config.hostUrl}/share_button.html?targetUrl=${i.targetUrl}${n}'\n        class='tonicpow-widget-share-button'\n        width='${i.width}'\n        height='${i.height}'\n      />`,this.initializeButtonViews()}initializeButtonViews(){if(!this.buttonViewsInitialized){const t="\n          * { clear: all }\n          .tonicpow-widget-share-button { border: none; }\n          .tonicpow-widget-share-button > iframe { overflow: hidden; }\n          .tonicpow-modal { font-family: Nunito, Arial; display: flex; align-items: center; padding: 0 1em; text-align: center; width: 100%; height: 100%; position: fixed; top: 0; left: 0; }\n          .tonicpow-modal__overlay { background: black; bottom: 0; left: 0; position: fixed; right: 0; text-align: center; top: 0; z-index: -800; opacity: 0.5; }\n          .tonicpow-modal__box { padding: 25px; position: relative; margin: 1em auto; max-width: 500px; width: 90%; background-color: #fff; border-radius: 12px; }\n          .tonicpow-modal__box > h2 { margin-top: 0; text-align: left; }\n          .tonicpow-modal__box > h2 > .tonicpow-modal__close { float: right; cursor: pointer; }\n          ",e=document.createElement("style");e.appendChild(document.createTextNode(t)),document.head.appendChild(e),this.buttonViewsInitialized=!0,window.addEventListener("message",(t=>{if(t.data&&t.data.buttonId&&"tonicpow"===t.data.source){const e=this.shareButtons.get(t.data.buttonId)||{};t.data.error?e.hasOwnProperty("onError")&&"function"==typeof e.onError?e.onError(t.data):a.showPopup({title:"ERROR: "+t.data.error,message:t.data.message}):e.hasOwnProperty("onSuccess")&&"function"==typeof e.onSuccess?e.onSuccess(t.data):a.showPopup({title:"TonicPow link",message:t.data.shortLinkURL})}}))}}static showPopup(t){const e=document.createElement("div");e.id="tonicpow-widget-popup",e.classList.add("tonicpow-modal"),e.innerHTML=`\n      <div class="tonicpow-modal__overlay" onclick="TonicPow.closePopup();"></div>\n      <div class="tonicpow-modal__box">\n        <h2>\n          ${t.title}\n          <span class="tonicpow-modal__close" onclick="TonicPow.closePopup();">X</span>\n        </h2>\n        <p>${t.message}</p>\n      </div>\n    `,document.body.appendChild(e)}async initializeBanner(t){const e=t.getAttribute(this.config.widgetIdAttribute);if(e){this.widgets.set(e,null);try{const i=await fetch(`${this.config.apiUrl}/v1/widgets/display/${e}?provider=embed-${this.config.version}`);let n;403===i.status?(console.info(`${i.status}: Domain not allowed`),n={link_url:this.config.hostUrl,image_url:`${this.config.hostUrl}/images/widgetFallback.svg`}):n=await i.json();const o=encodeURIComponent(n.title);t.innerHTML=`\n      <a href='${n.link_url}?utm_source=tonicpow-widgets&utm_medium=widget&utm_campaign=${e}&utm_content=${o}' style='display: inline-block'>\n      <img src='${n.image_url}' \n      width='${n.width}' \n      height='${n.height}' \n      alt='${n.title}' />\n      </a>`,t.setAttribute("data-width",n.width),t.setAttribute("data-height",n.height),this.widgets.set(e,n),this.options&&this.options.onWidgetLoaded&&(n.id=e,this.options.onWidgetLoaded(n))}catch(t){throw t}}else console.log(`${e} not found`)}}const c=new a;window.TonicPow=c||{}})();